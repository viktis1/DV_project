{'thresholding', 'prediction_type', 'sample_max_value', 'timestep_spacing', 'dynamic_thresholding_ratio', 'variance_type', 'rescale_betas_zero_snr', 'clip_sample_range'} was not found in config. Values will be initialized to default values.
{'scaling_factor', 'force_upcast', 'use_quant_conv', 'use_post_quant_conv', 'mid_block_add_attention', 'shift_factor', 'latents_mean', 'latents_std'} was not found in config. Values will be initialized to default values.
All model checkpoint weights were used when initializing AutoencoderKL.

All the weights of AutoencoderKL were initialized from the model checkpoint at stable-diffusion-v1-5/stable-diffusion-v1-5.
If your task is similar to the task the model of the checkpoint was trained on, you can already use AutoencoderKL for predictions without further training.
{'addition_embed_type_num_heads', 'mid_block_type', 'addition_embed_type', 'dual_cross_attention', 'time_cond_proj_dim', 'use_linear_projection', 'resnet_out_scale_factor', 'timestep_post_act', 'cross_attention_norm', 'resnet_time_scale_shift', 'time_embedding_dim', 'conv_out_kernel', 'attention_type', 'projection_class_embeddings_input_dim', 'transformer_layers_per_block', 'reverse_transformer_layers_per_block', 'only_cross_attention', 'num_attention_heads', 'resnet_skip_time_act', 'time_embedding_act_fn', 'addition_time_embed_dim', 'class_embeddings_concat', 'encoder_hid_dim', 'class_embed_type', 'dropout', 'conv_in_kernel', 'encoder_hid_dim_type', 'mid_block_only_cross_attention', 'time_embedding_type', 'num_class_embeds', 'upcast_attention'} was not found in config. Values will be initialized to default values.
All model checkpoint weights were used when initializing UNet2DConditionModel.

All the weights of UNet2DConditionModel were initialized from the model checkpoint at stable-diffusion-v1-5/stable-diffusion-v1-5.
If your task is similar to the task the model of the checkpoint was trained on, you can already use UNet2DConditionModel for predictions without further training.
Total trainable LoRA parameters: 51019776
***** Running training *****
  Num examples = 5000
  Num Epochs = 4
  Instantaneous batch size per device = 2
  Total train batch size (w. parallel, distributed & accumulation) = 4
  Gradient Accumulation steps = 2
  Total optimization steps = 5000
Resuming full training state from simplePrompt\checkpoint-5000
Steps: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:00<?, ?it/s]Model weights saved in simplePrompt/lora-steps-5000/pytorch_lora_weights.safetensors
Saving LoRA weights only
